{"version":3,"sources":["Overlay.jsx","utils.js","Countdown.jsx","EditEvent.jsx","App.jsx","index.js"],"names":["Overlay","state","visible","toogleVisible","setState","prevState","overlayClass","this","className","onClick","props","children","Component","isValidNumberInput","e","isNaN","parseInt","key","preventDefault","parseInputAsNumber","val","hourMinuteToSeconds","h","m","Countdown","name","hour","minute","timeNow","onRemove","onEditInit","id","diff","seconds","diffText","s","Math","floor","toString","padStart","secondsToHourMinuteSecond","EditEvent","onInputChange","onSave","onCancel","isFormValid","length","isValidHour","isValidMinute","isFormEmpty","htmlFor","type","value","onChange","target","onKeyPress","disabled","PropType","PropTypes","string","number","func","App","events","editedEvent","uniqid","now","Date","getHours","getMinutes","getSeconds","handleEditEvent","handleSaveEvent","find","event","map","localStorage","setItem","JSON","stringify","handleRemoveEvent","filter","handleEditInit","handleEditCancel","timer","storageEvents","parse","getItem","intervalId","setInterval","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c945449.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./Overlay.css\";\n\nclass Overlay extends Component {\n  state = {\n    visible: false,\n  };\n\n  toogleVisible = () => {\n    this.setState((prevState) => ({\n      visible: !prevState.visible,\n    }));\n  };\n\n  render() {\n    const overlayClass = this.state.visible\n      ? \"overlay__modal overlay__modal--visible\"\n      : \"overlay__modal\";\n\n    return (\n      <div className=\"overlay\">\n        <span onClick={this.toogleVisible}>info</span>\n        <div className={overlayClass}>\n          <span onClick={this.toogleVisible}>close</span>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Overlay;\n","export const isValidNumberInput = (e) => {\n  if (isNaN(parseInt(e.key))) e.preventDefault();\n};\n\nexport const parseInputAsNumber = (val) => {\n  if (val === \"\") return -1;\n  if (isNaN(parseInt(val))) return -1;\n  return parseInt(val);\n};\n\nexport const isValidName = (val) => {\n  if (val.length > 0) return true;\n  return false;\n};\n\nexport const isValidHour = (val) => {\n  if (val >= 0 && val <= 23) return true;\n  return false;\n};\n\nexport const isValidMinute = (val) => {\n  if (val >= 0 && val <= 59) return true;\n  return false;\n};\n\nexport const hourMinuteToSeconds = (h, m) => {\n  return h * 3600 + m * 60;\n};\n\nexport const secondsToHourMinuteSecond = (s) => {\n  let seconds = s;\n\n  const hour = Math.floor(seconds / 3600)\n    .toString()\n    .padStart(2, 0);\n\n  seconds -= hour * 3600;\n  const minute = Math.floor(seconds / 60)\n    .toString()\n    .padStart(2, 0);\n\n  seconds -= minute * 60;\n  seconds = seconds.toString().padStart(2, 0);\n\n  return `${hour}:${minute}:${seconds}`;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Overlay from \"./Overlay\";\nimport { hourMinuteToSeconds, secondsToHourMinuteSecond } from \"./utils\";\n\nimport \"./Countdown.css\";\nimport \"./../node_modules/semantic-ui-css/semantic.css\";\n\nconst Countdown = ({\n  name,\n  hour,\n  minute,\n  timeNow,\n  onRemove,\n  onEditInit,\n  id,\n}) => {\n  const eventInSeconds = hourMinuteToSeconds(hour, minute);\n\n  const nowInSeconds =\n    hourMinuteToSeconds(timeNow.hour, timeNow.minute) + timeNow.seconds;\n\n  const diff = eventInSeconds - nowInSeconds;\n\n  const diffText = diff > 0 ? secondsToHourMinuteSecond(diff) : \"tomorrow\";\n\n  return (\n    <div className=\"countdown\">\n      <strong>{name}</strong> - {diffText}\n      <div className=\"countdown__icons\">\n        <i className=\"icon edit\" onClick={() => onEditInit(id)}></i>\n        <i className=\"icon times\" onClick={() => onRemove(id)}></i>\n      </div>\n      <Overlay>\n        <h1>{name}</h1>\n        <p>\n          {hour.toString().padStart(2, 0)}:{minute.toString().padStart(2, 0)}\n        </p>\n      </Overlay>\n    </div>\n  );\n};\n\nCountdown.propTypes = {\n  name: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onEditInit: PropTypes.func,\n  onRemove: PropTypes.func,\n  timeNow: PropTypes.shape({\n    hour: PropTypes.number,\n    minute: PropTypes.number,\n    seconds: PropTypes.number,\n  }),\n};\n\nexport default Countdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  isValidNumberInput,\n  parseInputAsNumber,\n  isValidName,\n  isValidHour,\n  isValidMinute,\n} from \"./utils\";\n\nimport \"./EditEvent.css\";\n\nconst EditEvent = ({ onInputChange, onSave, onCancel, name, hour, minute }) => {\n  const isFormValid =\n    isValidName(name) && isValidHour(hour) && isValidMinute(minute);\n\n  const isFormEmpty = name === \"\" && hour === -1 && minute === -1;\n\n  return (\n    <div className=\"edit-event\">\n      <div className=\"edit-event__input-group\">\n        <label htmlFor=\"name\">name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={name}\n          onChange={(e) => {\n            onInputChange({ [e.target.name]: e.target.value });\n          }}\n        />\n      </div>\n      <div className=\"edit-event__input-group\">\n        <label htmlFor=\"hour\">hour</label>\n        <input\n          type=\"tel\"\n          id=\"hour\"\n          name=\"hour\"\n          value={hour === -1 ? \"\" : hour}\n          onKeyPress={(e) => isValidNumberInput(e)}\n          onChange={(e) => {\n            onInputChange({\n              [e.target.name]: parseInputAsNumber(e.target.value),\n            });\n          }}\n        />\n      </div>\n      <div className=\"edit-event__input-group\">\n        <label htmlFor=\"minute\">minute</label>\n        <input\n          type=\"tel\"\n          id=\"minute\"\n          name=\"minute\"\n          value={minute === -1 ? \"\" : minute}\n          onKeyPress={(e) => isValidNumberInput(e)}\n          onChange={(e) => {\n            onInputChange({\n              [e.target.name]: parseInputAsNumber(e.target.value),\n            });\n          }}\n        />\n      </div>\n      <button disabled={!isFormValid} onClick={onSave}>\n        OK\n      </button>\n      <button disabled={isFormEmpty} onClick={onCancel}>\n        Cancel\n      </button>\n    </div>\n  );\n};\n\nEditEvent.PropType = {\n  name: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onInputChange: PropTypes.func,\n  onSave: PropTypes.func,\n  onCancel: PropTypes.func,\n};\n\nexport default EditEvent;\n","import React, { Component } from \"react\";\nimport Countdown from \"./Countdown\";\nimport EditEvent from \"./EditEvent\";\nimport uniqid from \"uniqid\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    events: [\n      { id: 0, name: \"śniadanie\", hour: 7, minute: 0 },\n      { id: 1, name: \"obiad\", hour: 15, minute: 0 },\n      { id: 2, name: \"kolacja\", hour: 19, minute: 0 },\n    ],\n    editedEvent: {\n      id: uniqid(),\n      name: \"\",\n      hour: -1,\n      minute: -1,\n    },\n    now: {\n      hour: new Date().getHours(),\n      minute: new Date().getMinutes(),\n      seconds: new Date().getSeconds(),\n    },\n  };\n\n  handleEditEvent = (val) => {\n    this.setState((prevState) => ({\n      editedEvent: { ...prevState.editedEvent, ...val },\n    }));\n  };\n\n  handleSaveEvent = () => {\n    this.setState(\n      (prevState) => {\n        const editedEventExist = prevState.events.find(\n          (event) => event.id === prevState.editedEvent.id\n        );\n\n        let updatedEvents;\n        if (editedEventExist) {\n          updatedEvents = prevState.events.map((event) => {\n            if (event.id === prevState.editedEvent.id) {\n              return prevState.editedEvent;\n            }\n            return event;\n          });\n        } else {\n          updatedEvents = [...prevState.events, prevState.editedEvent];\n        }\n\n        return {\n          events: updatedEvents,\n          editedEvent: {\n            id: uniqid(),\n            name: \"\",\n            hour: -1,\n            minute: -1,\n          },\n        };\n      },\n      () => {\n        localStorage.setItem(\"events\", JSON.stringify(this.state.events));\n      }\n    );\n  };\n\n  handleRemoveEvent = (id) => {\n    this.setState(\n      (prevState) => ({\n        events: prevState.events.filter((event) => event.id !== id),\n      }),\n      () => {\n        localStorage.setItem(\"events\", JSON.stringify(this.state.events));\n      }\n    );\n  };\n\n  handleEditInit = (id) => {\n    this.setState((prevState) => ({\n      editedEvent: prevState.events.find((event) => event.id === id),\n    }));\n  };\n\n  handleEditCancel = () => {\n    this.setState({\n      editedEvent: {\n        id: uniqid(),\n        name: \"\",\n        hour: -1,\n        minute: -1,\n      },\n    });\n  };\n\n  timer = () => {\n    this.setState({\n      now: {\n        hour: new Date().getHours(),\n        minute: new Date().getMinutes(),\n        seconds: new Date().getSeconds(),\n      },\n    });\n  };\n\n  componentDidMount() {\n    const storageEvents = JSON.parse(localStorage.getItem(\"events\")) || [];\n    this.setState({ events: storageEvents });\n\n    const intervalId = setInterval(this.timer, 1000);\n    this.setState({ intervalId });\n  }\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    const events = this.state.events.map((event) => (\n      <Countdown\n        name={event.name}\n        hour={event.hour}\n        minute={event.minute}\n        timeNow={this.state.now}\n        key={event.id}\n        id={event.id}\n        onRemove={(id) => this.handleRemoveEvent(id)}\n        onEditInit={(id) => this.handleEditInit(id)}\n      />\n    ));\n\n    const { name, hour, minute } = this.state.editedEvent;\n\n    return (\n      <div className=\"app\">\n        {events}\n        <EditEvent\n          name={name}\n          hour={hour}\n          minute={minute}\n          onInputChange={(val) => this.handleEditEvent(val)}\n          onSave={this.handleSaveEvent}\n          onCancel={this.handleEditCancel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}